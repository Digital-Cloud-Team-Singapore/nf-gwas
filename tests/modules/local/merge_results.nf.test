import java.util.zip.GZIPInputStream

nextflow_process {

    name "Test Process MERGE_RESULTS"
    script "modules/local/merge_results.nf"
    process "MERGE_RESULTS"

    test("Should output 2 merged regenie files by phenotype, one is empty") {

        when {
        
            process {
                """
                f1 = file('$baseDir/tests/input/merge_results/chr1_Y1.regenie.gz')
                f2 = file('$baseDir/tests/input/merge_results/chr2_Y1.regenie.gz')
                f3 = file('$baseDir/tests/input/merge_results/chr1_Y2.regenie.gz')
                f4 = file('$baseDir/tests/input/merge_results/chr2_Y2.regenie.gz')

                regenie_step2_out = Channel.of( ['chr1', f1], ['chr2', f2], ['chr1', f3], ['chr2', f4])
                input[0] = regenie_step2_out
                  .transpose()
                  .map { prefix, file -> tuple(file.baseName.replaceAll(prefix + "_", '').replaceAll('.regenie', ''), file) }.groupTuple()
                """
            }
        }

        then {
            assert process.success
            with(process.out) {

                with(results_merged){
                assert size() == 2

                GZIPInputStream gzip = new GZIPInputStream(new FileInputStream(file(get(0).get(1))));
                BufferedReader br = new BufferedReader(new InputStreamReader(gzip));
                count = 0;
                while ((content = br.readLine()) != null) {
                    if(count == 0) {
                    //check if regenie header is as expected
                    assert content.equals("CHROM\tGENPOS\tID\tALLELE0\tALLELE1\tA1FREQ\tINFO\tN\tTEST\tBETA\tSE\tCHISQ\tLOG10P\tEXTRA")
                    }
                    count++;
                    }

                //check amount of lines of Y1
                assert (count == 502)

                gzip = new GZIPInputStream(new FileInputStream(file(get(1).get(1))));
                br = new BufferedReader(new InputStreamReader(gzip));
                count = 0;
                while ((content = br.readLine()) != null) {
                    if(count == 0) {
                    //check if regenie header is as expected
                    assert content.equals("CHROM\tGENPOS\tID\tALLELE0\tALLELE1\tA1FREQ\tINFO\tN\tTEST\tBETA\tSE\tCHISQ\tLOG10P\tEXTRA")
                    }
                    count++;
                    }

                //check amount of lines of Y2
                assert (count == 501)

                  }
            }

        }

    }

}
